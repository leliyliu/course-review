需要进一步完善的问题：
1. 并发和并行的区别
2.什么是多道程序设计技术
3.操作系统中内核与shell的关系
4.中断，异常和系统调用的区别与联系
5.操作系统调用函数的方式
6.BIOS 和 bootloader 的区别与联系
7.保护模式与实模式的相关理解
8.NTFS文件系统理解
9.对给出的boot源码进行分析
10.一个进程的内存布局为什么不从0地址开始
11.对函数进行汇编之后，表示的各个段分别是什么含义，尤其是.bss,.edata,.data段的含义。
12..bss攻击是什么意思
13.如何理解在用户态中的进程和在内核态中执行的进程，其关系是什么？
14.从用户态陷入到内核态的具体过程
15.如何区分不同的进程
16.linux 的 0号进程和1号进程
17.单核CPU下线程有意义吗？
18.用户级线程和内核级线程的相互对应
19.线程映射的操作过程和其实质含义
20.阻塞与非阻塞，同步与异步（调度）
21.优先级调度一般采用什么数据结构？
22..rodata , .data , .bss这三者之间有什么区别？
23.线程可使用的数据形式的理解？
24.linux任务调度算法CFS
25.理解PPT进程这一部分的内容（3），主要是理解代码
26.静态和动态链接库的区别(并且理解malloc的作用）
27.进程的内核态？使用物理地址还是虚拟地址
28.段控制寄存器保存在哪里？
29.段页式映射机制具体工作方式
30.反向页表映射机制的实现？
31.CPU如何读写设备控制器的寄存器？
32.异步I/O模式是否能很好处理所有I/O情况
33.RDMA 和 Infiniband
34.硬连接和符号链接(hard link and symbol link)
35.如何更好地设计文件系统？处理好挑战  -> 高性能，普适性，持久性，可靠性
36.bitmap ? 实现空闲地址映射
37.linux文件系统
38.管程和信号量概念理解，尤其是管程！






